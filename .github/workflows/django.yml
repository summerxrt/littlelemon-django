name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    # Step 1: Checkout the code
    - uses: actions/checkout@v4

    # Step 2: Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # Step 3: Cache pip dependencies
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Step 4: Install dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest pytest-django

    # Step 5: Set up Database (for PostgreSQL, optional)
    - name: Set up Database
      run: |
        sudo apt-get install -y postgresql postgresql-contrib

    # Step 6: Run Migrations
    - name: Run Migrations
      run: |
        python manage.py migrate

    # Step 7: Lint with flake8
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Treat all lint errors as warnings (exit-zero) for style improvements
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Step 8: Run Tests with Django
    - name: Run Tests
      run: |
        python manage.py test
